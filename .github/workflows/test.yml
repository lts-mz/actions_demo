name: test
on:
  push:
    branches:
      - '**'
      - '!REL/**'
  workflow_call:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set start timestamp
        id: start
        run: |
          printf 'timestamp=%(%s)T\n' >> "$GITHUB_OUTPUT"
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
      - name: Get workflow run data
        if: always()
        id: run_data
        run: |
          response=(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{github.token}}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{github.repository}}/actions/workflows/test/runs)
          echo "response=$response" >> $GITHUB_OUTPUT
      - name: Print workflow run data
        run: |
          echo ${{ steps.run_data.outputs.response }}
      # - name: Send slack notification
      #   run: |
      #     WORKFLOW_DATA=$(cat response.json)
      #     DATA=$(echo $WORKFLOW_DATA | jq -r '.workflow_runs')
      #     echo $DATA
      # - name: Set end timestamp
      #   run: |
      #     printf -v now '%(%s)T'
      #     printf -v duration $((now - ${{ steps.start.outputs.timestamp }}))
      #     echo  "Error: ${{ job.status }} on ${{ github.repository }} ${{ github.sha }} duration: $duration" 
